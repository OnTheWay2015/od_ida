.faq 怎样方便的导出调用栈,完整的 stack
-------------------------------

-------------------------------
-------------------------------
-------------------------------
-------------------------------
-------------------------------
-------------------------------
-------------------------------
断点后，按ctrl+f9，走到最后一个ret,可以一步步看上一帧是从哪里调过来的当前调用栈回到上一帧
-------------------------------
https://blog.csdn.net/cssxn/java/article/details/82819081
0） ALT+K 查看调用堆栈
使用od破解软件时，经常会用到栈回溯的方法，假设我们现在所在main个函数的入口点

使用alt+k来查看此函数的父级调用

堆栈调用窗口显示的每一行，代表从上一层函数，进入当前函数的入口，这个功能缺点就是只能在程序运行到某个函数中，并且断下来后，才能使用。

1) CTRL+K
假设我们有这样的需求，我不想运行到某个函数，只想查看该函数的调用关系。

我想知道谁调用了它？
我想知道它又调用了哪些函数？
这时候使用CTRL+K可以清楚的看到某个函数的上一层，以及这个函数内部调用了那些方法


第一列 显示的是main函数的上一层函数是谁
第二列 显示的是当前的函数
第三列显示的是当前函数内部调用了那些函数
在任意一列，双击，可以把双击的那一列，作为当前函数，进一步追踪。 

2) CTRL+R 交叉引用
我们知道，IDA中有个很强大的功能，就是查看某个函数或者变量的交叉引用。同样OD中也这样的功能
我在main函数的入口点，按下CTRL+R，可以看到谁引用了这个函数入口的地址。

-------------------------------
在C窗口,右键->查找->查找注释 

-------------------------------
栈里显示的返回没有 from 时，说明这个调用是动态的,比如 6510C510  |.  FFD2          call edx

0012ECD0  |651346B3  RETURN to LoginPan.651346B3 from LoginPan.6512EABB
0012ECF8  |6510C512  RETURN to LoginPan.6510C512

-------------------------------
最后一个退出的OD会保留断点配置
-------------------------------
快捷命令地址是十六进制
dd 0x013456ec

//偏移地址
dd ss:[ebp]+0xc
dd ss:[ebp+0xc]

-------------------------------
条件断点
//偏移地址
ss:[ebp+0xc]==0x1c


-------------------------------
在C窗口的 数据dump区, 选择内容，右建显示菜单一般默认选择是 long->address. 如想显示字符串，可选择 long->address with ASKII...
也可以选择右键 -> TEXT 
-------------------------------
在 createProcessW断点，在windows任务栏看当前进程PID, 继续运行后再看新增进程PID是大还是小， 在双开的第二个OD里,attach时选择对应的.

-------------------------------
在M窗口可查看内存
用 CTRL+B 搜索内存中的字符串。


------------------




