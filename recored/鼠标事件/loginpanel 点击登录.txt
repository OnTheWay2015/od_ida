//loginpanel

HRESULT __stdcall DllGetClassObject(const CLSID *const rclsid, const IID *const riid, LPVOID *ppv)
{
  return sub_6510206D(rclsid, riid, ppv);
}



0012FDE0  |004014D9  RETURN to QQ.004014D9 

0012FD94  |69F0B146  RETURN to HummerEn.69F0B146 from HummerEn.69F0A4A4

0012FAC8  |7C931066  RETURN to ntdll.7C931066 from ntdll.RtlLeaveCriticalSection


0012F7F0  |69F0652A  RETURN to HummerEn.69F0652A from USER32.DispatchMessageW


0012F7B8  |69F060DC  RETURN to HummerEn.69F060DC from HummerEn.69F04FFB

0012F550   69F07E63  HummerEn.69F07E63


--------
//RtlLeaveCriticalSection
qq.exe::004014D9 => HummerEn::RunQQHummerEngine()=>sub_69F091CB()=>sub_69F04152()=>EnterCriticalSection()


void __thiscall sub_69F04152(LPCRITICAL_SECTION lpCriticalSection)
{
  LPCRITICAL_SECTION v1; // esi@1
  PRTL_CRITICAL_SECTION_DEBUG v2; // eax@1

  v1 = lpCriticalSection;
  v2 = lpCriticalSection[1].DebugInfo;
  if ( v2 )
  {
    v2->CriticalSection = 0;
    EnterCriticalSection(lpCriticalSection);
    sub_69F041E8(v1[1].DebugInfo);
    v1[1].DebugInfo = 0;
    LeaveCriticalSection(v1);
  }
  DeleteCriticalSection(v1);
}



--------
//DispatchMessageW
qq.exe::004014D9 => HummerEn::RunQQHummerEngine() =>sub_69F0A4A4()=> ... =>sub_69F064C3()
char __usercall sub_69F064C3@<al>(int a1@<edi>, const MSG *a2@<esi>)
{
  UINT v2; // eax@1

  v2 = a2->message;
  if ( v2 == 18 )
  {
    *(_BYTE *)(*(_DWORD *)(a1 + 44) + 4) = 1;
    PostQuitMessage(a2->wParam);
    return 0;
  }
  if ( v2 == 36863 && a2->hwnd == *(HWND *)(a1 + 48) )
    return sub_69F06536(a1);
  if ( !CallMsgFilterW((LPMSG)a2, 20481) )
  {
    sub_69F06081(a2);//调用
    TranslateMessage(a2);
    if ( a2->message == 36863 && a2->hwnd == *(HWND *)(a1 + 48) )
      return sub_69F06536(a1);
    DispatchMessageW(a2);
    sub_69F060E4(a2);
  }
  return 1;
}

char __thiscall sub_69F06536(void *this)
{
  void *v1; // edi@1
  bool v2; // ST23_1@1
  int v4; // [sp+10h] [bp-20h]@1
  struct tagMSG Msg; // [sp+14h] [bp-1Ch]@1

  v1 = this;
  v4 = (int)this;
  v2 = PeekMessageW(&Msg, 0, 0, 0, 1u) != 0;
  InterlockedExchange((volatile LONG *)v1 + 10, 0);
  if ( !v2 )
    return 0;
  if ( Msg.message == 37886 )
  {
    PostMessageW(Msg.hwnd, 0x93FEu, Msg.wParam, Msg.lParam);
    PeekMessageW(&Msg, 0, 0, 0, 0);
    if ( Msg.message == 37886 )
      return 0;
    PeekMessageW(&Msg, 0, 0, 0, 1u);
  }
  if ( Msg.message != 18 )
    (*(void (**)(void))(*(_DWORD *)v4 + 12))();
  return sub_69F064C3(v4, &Msg);
}

-----------
//69F060DC
//循环？？
DWORD *__thiscall sub_69F06081(int this, int a2)
{
  int v2; // esi@1
  bool v3; // zf@1
  int v4; // eax@6
  _DWORD *result; // eax@7
  int v6; // [sp+10h] [bp-18h]@1
  int v7; // [sp+14h] [bp-14h]@1
  int v8; // [sp+18h] [bp-10h]@2
  int v9; // [sp+24h] [bp-4h]@4

  v7 = 0;
  v2 = this + 8;
  v3 = *(_DWORD *)(this + 28) == 0;
  v6 = this + 8;
  if ( v3 )
    v8 = -1;
  else
    v8 = sub_69F050FB();
  ++*(_DWORD *)(v2 + 16);
  v9 = 0;
  while ( 1 )
  {
    v4 = sub_69F06654();
    if ( !v4 )
      break;
    (*(void (__thiscall **)(int, int))(*(_DWORD *)v4 + 4))(v4, a2);
  }
  result = (_DWORD *)v6;
  v3 = *(_DWORD *)(v6 + 16) == 1;
  --result[4];
  if ( v3 )
    result = sub_69F04FFB((int)result);
  return result;
}

//69F04FFB
//循环？？
_DWORD *__stdcall sub_69F04FFB(int a1)
{
  int v1; // ebx@1
  _DWORD *result; // eax@2
  _DWORD *v3; // edi@2
  void *v4; // esi@5
  int v5; // eax@14
  int v6; // [sp+10h] [bp-18h]@1
  void *Dst; // [sp+14h] [bp-14h]@5

  sub_69F0508C();
  v1 = v6;
  while ( 1 )
  {
    result = (_DWORD *)sub_69F050A7();
    v3 = result;
    if ( !v1 || v1 != *result )
      result = (_DWORD *)invalid_parameter_noinfo();
    v4 = Dst;
    if ( Dst == (void *)v3[1] )
      break;
    if ( !v1 )
      invalid_parameter_noinfo();
    if ( (unsigned int)v4 >= *(_DWORD *)(v1 + 8) )
      invalid_parameter_noinfo();
    if ( *(_DWORD *)v4 )
    {
      if ( (unsigned int)v4 >= *(_DWORD *)(v1 + 8) )
        invalid_parameter_noinfo();
      Dst = (char *)v4 + 4;
    }
    else
    {
      v5 = sub_69F050C2(v1, v4);
      v1 = *(_DWORD *)v5;
      Dst = *(void **)(v5 + 4);
    }
  }
  return result;
}




//69F07E63
bool __usercall sub_69F07DD0@<al>(HWND a1@<esi>)
{
  int v1; // eax@2
  char v2; // al@2
  bool result; // al@3
  char v4; // [sp+Ch] [bp-220h]@2
  char v5; // [sp+13h] [bp-219h]@2
  WCHAR ClassName; // [sp+14h] [bp-218h]@1
  char Dst; // [sp+16h] [bp-216h]@1
  int v8; // [sp+228h] [bp-4h]@2

  ClassName = 0;
  memset(&Dst, 0, 0x206u);
  result = 0;
  if ( GetClassNameW(a1, &ClassName, 260) )
  {
    v1 = CTXStringW::CTXStringW((CTXStringW *)&v4, &ClassName);
    v8 = 0;
    v2 = operator==(v1, L"MyWing");
    v8 = -1;
    v5 = v2;
    CTXStringW::~CTXStringW((CTXStringW *)&v4);
    if ( v5 )
      result = 1;
  }
  return result;
}


